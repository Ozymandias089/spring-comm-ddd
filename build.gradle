plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.y11i'
version = '0.0.1-SNAPSHOT'
description = 'spring-comm-ddd'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(25)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // === main runtime ===
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    implementation "org.springframework.session:spring-session-data-redis"
    implementation "org.springframework.boot:spring-boot-starter-validation"

    implementation "org.flywaydb:flyway-core"
    implementation "org.flywaydb:flyway-mysql"

    runtimeOnly "org.mariadb.jdbc:mariadb-java-client"

    // lombok (prod + test에서 컴파일 타임 애너테이션)
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    testCompileOnly "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"

    // === test-only ===
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"

    // H2 for @DataJpaTest / repository adapter integration tests
    testImplementation "com.h2database:h2"

    // JUnit Platform launcher (some IDEs / Gradle runners still expect this at runtime)
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"

    // --- future dockerized integration tests (kept for later) ---
    // BOM to align all org.testcontainers:* versions
    testImplementation platform("org.testcontainers:testcontainers-bom:2.0.1")
    // JUnit 5 extension for automatic lifecycle mgmt of containers
    testImplementation "org.testcontainers:junit-jupiter"
    // MariaDB container (we'll swap H2 -> real MariaDB in future @Tag('integration') tests)
    testImplementation "org.testcontainers:mariadb"
    // (no generic `org.testcontainers:testcontainers` here; we can add redis/etc later when we actually use them)
}


tasks.named('test') {
    useJUnitPlatform{
        excludeTags 'integration'
    }
}
